{"version":3,"sources":["../src/common/actions.ts","../src/common/index.ts","dappsandboxed.ts"],"names":[],"mappings":"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","file":"dappsandboxed.1e3d25c9.js","sourceRoot":"../srcdappsandboxed","sourcesContent":["import { TransactionState, Identification, TransactionOriginDapp } from '/models';\n\nexport const DAPP_INITIAL_SETUP = '[Common] dapp initial setup';\nexport const EXECUTE_TRANSACTION = '[Common] Execute transaction';\nexport const NAVIGATE = '[Common] Navigate';\n\nexport const SEND_RCHAIN_TRANSACTION_FROM_SANDBOX = '[Common] Send RChain transaction from sandbox';\nexport const SEND_RCHAIN_PAYMENT_REQUEST_FROM_SANDBOX = '[Common] Send RChain payment request from sandbox';\n\nexport const UPDATE_RCHAIN_TRANSACTION_STATUS = '[Common] Update RChain transaction status';\nexport const UPDATE_RCHAIN_TRANSACTION_VALUE = '[Common] Update RChain transaction value';\n\nexport const IDENTIFY_FROM_SANDBOX = '[Common] Identify from sandbox';\n\nexport const UPDATE_TRANSACTIONS = '[Common] Update transactions';\nexport const UPDATE_IDENTIFICATIONS = '[Common] Update identifications';\n\nexport interface DappInitialSetupPayload {\n  html: string;\n  title: string;\n  appPath: string; // path to load the resources from, will be \"file://....\" in dev , and \"/\" in prod\n  dappyDomain: string;\n  path: string;\n  dappId: string;\n}\nexport const dappInitialSetupAction = (values: DappInitialSetupPayload) => {\n  return {\n    type: DAPP_INITIAL_SETUP,\n    payload: values,\n  };\n};\n\nexport interface ExecuteTransactionPayload {\n  parameters: {\n    chainId?: string;\n    keyProvider?: string;\n    actions: any;\n  };\n  callId: string;\n  dappId: string;\n}\nexport interface ExecuteTransactionAction {\n  type: 'Execute transaction';\n  payload: ExecuteTransactionPayload;\n}\nexport const executeTransactionAction = (values: ExecuteTransactionPayload) => {\n  return {\n    type: EXECUTE_TRANSACTION,\n    payload: values,\n  };\n};\n\nexport interface SendRChainTransactionFromMiddlewarePayload {\n  parameters: {\n    term?: string;\n    signatures?: { [expr: string]: string };\n  };\n  resourceId: string;\n  chainId: string;\n  id: string;\n  origin: TransactionOriginDapp;\n}\nexport interface SendRChainTransactionFromSandboxPayload {\n  parameters: {\n    term?: string;\n    signatures?: { [expr: string]: string };\n  };\n  callId: string;\n}\nexport interface SendRChainTransactionFromSandboxAction {\n  type: '[SandBox] Send RChain transaction from sandbox';\n  payload: SendRChainTransactionFromSandboxPayload;\n}\nexport const sendRChainTransactionFromSandboxAction = (values: SendRChainTransactionFromSandboxPayload) => {\n  return {\n    type: SEND_RCHAIN_TRANSACTION_FROM_SANDBOX,\n    payload: values,\n  };\n};\n\nexport interface RChainPaymentRequestParameters {\n  from?: string;\n  to: string | undefined;\n  amount: number | undefined;\n}\nexport interface SendRChainPaymentRequestFromMiddlewarePayload {\n  parameters: RChainPaymentRequestParameters;\n  resourceId: string;\n  chainId: string;\n  id: string;\n  origin: TransactionOriginDapp;\n}\n\nexport interface SendRChainPaymentRequestFromSandboxPayload {\n  parameters: {\n    from?: string;\n    to: string;\n    amount: number;\n  };\n  callId: string;\n}\nexport interface SendRChainPaymentRequestFromSandboxAction {\n  type: '[Common] Send RChain payment request from sandbox';\n  payload: SendRChainPaymentRequestFromSandboxPayload;\n}\nexport const sendRChainPaymentRequestFromSandboxAction = (values: SendRChainPaymentRequestFromSandboxPayload) => {\n  return {\n    type: SEND_RCHAIN_PAYMENT_REQUEST_FROM_SANDBOX,\n    payload: values,\n  };\n};\n\nexport interface UpdateTransactionsPayload {\n  transactions: {\n    [transactionId: string]: TransactionState;\n  };\n}\nexport interface UpdateTransactionsAction {\n  type: '[Common] Update transactions';\n  payload: UpdateTransactionsPayload;\n}\nexport const updateTransactionsAction = (values: UpdateTransactionsPayload) => {\n  return {\n    type: UPDATE_TRANSACTIONS,\n    payload: values,\n  };\n};\n\nexport interface IdentifyFromSandboxPayload {\n  parameters: {\n    publicKey: undefined | string;\n  };\n  callId: string;\n  resourceId: string;\n}\nexport interface IdentifyFromSandboxAction {\n  type: '[SandBox] Identify from sandbox';\n  payload: IdentifyFromSandboxPayload;\n}\nexport const identifyFromSandboxAction = (values: IdentifyFromSandboxPayload) => {\n  return {\n    type: IDENTIFY_FROM_SANDBOX,\n    payload: values,\n  };\n};\n\nexport interface UpdateIdentificationsPayload {\n  identifications: {\n    [callId: string]: Identification;\n  };\n}\nexport interface UpdateIdentificationsAction {\n  type: '[Common] Update identifications';\n  payload: UpdateIdentificationsPayload;\n}\nexport const updateIdentificationsAction = (values: UpdateIdentificationsPayload) => {\n  return {\n    type: UPDATE_IDENTIFICATIONS,\n    payload: values,\n  };\n};\n","export * from './actions';\n","import * as fromCommon from '../src/common';\n\nwindow.messageFromMain = (action) => {\n  if (action.type === fromCommon.DAPP_INITIAL_SETUP) {\n    const payload: fromCommon.DappInitialSetupPayload = action.payload;\n    console.log('[dappy] initial payload');\n    console.log(payload);\n    document.title = payload.title;\n    window.dappy = {\n      dappyDomain: payload.dappyDomain,\n      path: payload.path,\n      dappId: payload.dappId,\n    };\n    document.write(payload.html.replace(new RegExp('dappyl://', 'g'), payload.appPath));\n    document.close();\n\n    document.addEventListener('DOMContentLoaded', function () {\n      if (typeof window.initContextMenu !== 'undefined') {\n        window.initContextMenu();\n      }\n      setTimeout(() => {\n        var link = document.querySelector(\"link[rel*='icon']\");\n        if (link !== null) {\n          /*\n            Multiply tries because the event 'page-favicon-updated' is not\n            triggered if .appenChild is done too soon\n          */\n          setTimeout(() => {\n            document.getElementsByTagName('head')[0].appendChild(link.cloneNode());\n          }, 100);\n          setTimeout(() => {\n            document.getElementsByTagName('head')[0].appendChild(link.cloneNode());\n          }, 500);\n          setTimeout(() => {\n            document.getElementsByTagName('head')[0].appendChild(link.cloneNode());\n          }, 2000);\n          setTimeout(() => {\n            document.getElementsByTagName('head')[0].appendChild(link.cloneNode());\n          }, 5000);\n        }\n      }, 0);\n    });\n  } else {\n    console.error('Unknown action');\n    console.log(action);\n  }\n};\n\nlet DOMContentLoaded = false;\nlet initializePayload: any = undefined;\n\nconst interProcess = new XMLHttpRequest();\ninterProcess.open('POST', 'interprocessdapp://hi-from-dapp-sandboxed');\ninterProcess.send();\ninterProcess.onload = (a) => {\n  try {\n    const r = JSON.parse(a.target.responseText);\n    initializePayload = r;\n    if (DOMContentLoaded) {\n      window.messageFromMain(r);\n    }\n  } catch (e) {\n    console.log(e);\n    window.messageFromMain({ message: 'could not parse response' });\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  DOMContentLoaded = true;\n  if (initializePayload) {\n    window.messageFromMain(initializePayload);\n  }\n});\n"]}